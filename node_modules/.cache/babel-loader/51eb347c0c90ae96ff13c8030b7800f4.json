{"ast":null,"code":"var _jsxFileName = \"/home/khalid/react-covid-19-traker/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, CardContent, Card } from '@material-ui/core';\nimport './App.css';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport { sortData } from './Fun'; //import LineGraph from './LineGraph';\n// \"https://disease.sh/v3/covid-19/countries\"\n//USEEFECT =Runs a piece of code \n// basesd on a given condition \n\nfunction App() {\n  const [countries, setContries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setContries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    const url = countryCode === 'worldwide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n  };\n\n  console.log('CountryData123', tableData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, \"COVID-19 TRACKER\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app_dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldwide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 14\n    }\n  }, \"Worldwide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Coronavirus Cases\",\n    cases: countryInfo.todayCases,\n    total: countryInfo.cases,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    cases: countryInfo.todayRecovered,\n    total: countryInfo.recovered,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Deaths\",\n    cases: countryInfo.todayDeaths,\n    total: countryInfo.deaths,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"app_right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Live country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"Worldwide new Cases\"), /*#__PURE__*/React.createElement(LineGraph, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/khalid/react-covid-19-traker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","CardContent","Card","InfoBox","Map","Table","sortData","App","countries","setContries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, CardContent,Card } from '@material-ui/core';import './App.css';\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table'; \nimport {sortData} from './Fun';\n//import LineGraph from './LineGraph';\n// \"https://disease.sh/v3/covid-19/countries\"\n\n//USEEFECT =Runs a piece of code \n// basesd on a given condition \n\nfunction App() {\n\n  const [countries, setContries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(()=> {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((response) => response.json())\n    .then((data) =>{\n      setCountryInfo(data);\n    });\n  }, []);\n\n\n  useEffect(()=>{\n    const getCountriesData = async() =>{\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) =>{\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }\n        ));\n        const sortedData = sortData(data); \n          setTableData(sortedData);\n          setContries(countries); \n      });\n    };\n\n    getCountriesData();\n  },[]);\n\n  const onCountryChange = async (event) =>{\n    const countryCode = event.target.value;\n\n    const url = \n      countryCode === 'worldwide'\n       ? \"https://disease.sh/v3/covid-19/all\" \n       : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n       \n    });\n  \n  };\n\n  console.log('CountryData123', tableData)\n\n  return (\n    <div className=\"app\">\n      <div className='app_left'>\n\n\n        {/*Header*/} \n        <div className='app_header'>\n    \n         {/*Title + Select input dropdown*/}\n         <h1>COVID-19 TRACKER</h1>\n          <FormControl className='app_dropdown'>\n\n          {/*Loop through all the countries\n          and show a drop down \n        list of options */}\n            <Select variant='outlined' onChange={onCountryChange} value={country}>\n             <MenuItem value='worldwide'>Worldwide</MenuItem>\n              {countries.map((country) =>(\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        {/*infoBox*/}\n        <div className='app_stats'>\n\n          <InfoBox \n          title='Coronavirus Cases' \n          cases={countryInfo.todayCases} \n          total={countryInfo.cases}/>\n              \n          <InfoBox \n          title='Recovered' \n          cases={countryInfo.todayRecovered} \n          total={countryInfo.recovered}/>\n\n          <InfoBox \n          title='Deaths' \n          cases={countryInfo.todayDeaths}  \n          total={countryInfo.deaths}/>\n        </div>\n\n        {/*Map*/}\n        <Map />\n      </div>\n      <Card className='app_right'>\n        <CardContent>\n        {/*Table*/}\n          <h3>Live country</h3>\n          <Table countries={tableData}/>\n\n          <h3>Worldwide new Cases</h3>\n      {/*Graph*/}\n          <LineGraph/>\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}